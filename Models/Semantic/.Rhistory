}
# compute proba matrix
them_probas = matrix(0,length(names(keyword_dico)),length(unique(com$membership)))
for(i in 1:length(names(keyword_dico))){
if(i%%100==0){show(i)}
kwcount=0
for(kw in keyword_dico[[names(keyword_dico)[i]]]){if(kw %in% names(thematics)){
j=thematics[[kw]]
them_probas[i,j]=them_probas[i,j]+1;kwcount=kwcount+1
}}
if(kwcount>0){them_probas[i,]=them_probas[i,]/kwcount}
}
# number of articles with originality
#length(which(rowSums(them_probas)>0))
originalities=apply(them_probas,MARGIN = 1,FUN = function(r){if(sum(r)==0){return(0)}else{return(1 - sum(r^2))}})
cybindexes = c();cybresnames = c();iscyb=rep(FALSE,length(originalities))
for(cyb in cybnames){
indexes = which(names(keyword_dico)==cyb);
if(length(indexes)>0){
cybindexes=append(cybindexes,indexes[1]);
cybresnames=append(cybresnames,cyb)
iscyb[indexes[1]]=TRUE
}}
ggplot(data.frame(orig=originalities,cyb=iscyb), aes(x=orig, fill=cyb)) + geom_density(alpha=.3)
library(ggplot2)
ggplot(data.frame(orig=originalities,cyb=iscyb), aes(x=orig, fill=cyb)) + geom_density(alpha=.3)
length(which(iscyb))
sdat=as.tbl(dat)%>%group_by(iscyb)%>%summarise(mean=mean(orig))
dat=data.frame(orig=originalities,cyb=iscyb)
sdat=as.tbl(dat)%>%group_by(iscyb)%>%summarise(mean=mean(orig))
sdat=as.tbl(dat)%>%group_by(cyb)%>%summarise(mean=mean(orig))
length(which(iscyb))
dat=data.frame(orig=originalities,cyb=iscyb)
sdat=as.tbl(dat)%>%group_by(cyb)%>%summarise(mean=mean(orig))
library(ggplot2)
g=ggplot(dat, aes(x=orig, fill=cyb))
g+ geom_density(alpha=.3)+geom_vline(data=sdat, aes(xintercept=mean,  colour=cyb),
linetype="dashed", size=1)
sdat
dat
as.tbl(dat)%>%group_by(cyb)
g=ggplot(dat, aes(x=orig, fill=cyb))
g+ geom_density(alpha=.3)
cybprobas = them_probas[cybindexes,]
cybcumprobas = colSums(cybprobas)/length(which(rowSums(cybprobas)>0))
1 - sum(cybcumprobas^2)
sdat
Nb = 10000
nulljournalorigs=c()
for(i in 1:Nb){
probas = them_probas[sample.int(nrow(them_probas), size = length(cybindexes), replace = FALSE),]
cumprobas = colSums(probas)/length(which(rowSums(probas)>0))
nulljournalorigs=append(nulljournalorigs,1 - sum(cumprobas^2))
}
hist(nulljournalorigs,breaks=1000)
mean(nulljournalorigs)
head(them_probas)
i=1
neighbors(gcitation,v=cybnodes[i],mode="in")$name
gcitation
cybnodes
cybnodes=V(gcitation)[V(gcitation)$cyb==1]
cybnodes
neighbors(gcitation,v=cybnodes[i],mode="in")$name
keyword_dico[[neighbors(gcitation,v=cybnodes[i],mode="in")$name]]
cybsecorigin=c()
cybsecorigout=c()
cybsecorigall=c()
for(i in cybindexes){
show(i)
neigh = neighbors(gcitation,v=cybnodes[i],mode="in")$name
probas = rep(0,ncol(them_probas));count=0
for(n in 1:length(neigh)){
inds = which(names(keyword_dico==neigh[n]))
if(length(inds)>0){probas=probas+them_probas[inds[1],];count=count+1}
}
if(count>0){probas=probas/count}
if(sum(probas)>0){cybsecorigin=append(cybsecorigin,1-sum(probas^2))}
}
show(i)
neigh = neighbors(gcitation,v=cybnodes[i],mode="in")$name
## second order originality ?
cybsecorigin=c()
cybsecorigout=c()
cybsecorigall=c()
for(i in 1:length(cybnodes)){
show(i)
neigh = neighbors(gcitation,v=cybnodes[i],mode="in")$name
probas = rep(0,ncol(them_probas));count=0
for(n in 1:length(neigh)){
inds = which(names(keyword_dico==neigh[n]))
if(length(inds)>0){probas=probas+them_probas[inds[1],];count=count+1}
}
if(count>0){probas=probas/count}
if(sum(probas)>0){cybsecorigin=append(cybsecorigin,1-sum(probas^2))}
}
cybsecorigin=c()
cybsecorigout=c()
cybsecorigall=c()
for(i in 1:length(cybnodes)){
show(i)
neigh = neighbors(gcitation,v=cybnodes[i],mode="in")$name
show(neigh)
probas = rep(0,ncol(them_probas));count=0
for(n in 1:length(neigh)){
inds = which(names(keyword_dico==neigh[n]))
if(length(inds)>0){probas=probas+them_probas[inds[1],];count=count+1}
}
if(count>0){probas=probas/count}
if(sum(probas)>0){cybsecorigin=append(cybsecorigin,1-sum(probas^2))}
}
cybsecorigin=c()
cybsecorigout=c()
cybsecorigall=c()
for(i in 1:length(cybnodes)){
show(i)
neigh = neighbors(gcitation,v=cybnodes[i],mode="in")$name
show(neigh)
probas = rep(0,ncol(them_probas));count=0
for(n in 1:length(neigh)){
inds = which(names(keyword_dico)==neigh[n])
if(length(inds)>0){probas=probas+them_probas[inds[1],];count=count+1}
}
if(count>0){probas=probas/count}
if(sum(probas)>0){cybsecorigin=append(cybsecorigin,1-sum(probas^2))}
}
cybsecorigout=c()
#cybsecorigall=c()
for(i in 1:length(cybnodes)){
show(i)
neigh = neighbors(gcitation,v=cybnodes[i],mode="out")$name
show(neigh)
probas = rep(0,ncol(them_probas));count=0
for(n in 1:length(neigh)){
inds = which(names(keyword_dico)==neigh[n])
if(length(inds)>0){probas=probas+them_probas[inds[1],];count=count+1}
}
if(count>0){probas=probas/count}
if(sum(probas)>0){cybsecorigout=append(cybsecorigout,1-sum(probas^2))}
}
dat = data.frame(orig=c(cybsecorigin,cybsecorigout),type=c(rep("in",length(cybsecorigin),rep("out",length(cybsecorigout)))
)
)
c(cybsecorigin,cybsecorigout)
dat = data.frame(orig=c(cybsecorigin,cybsecorigout),type=c(rep("in",length(cybsecorigin)),rep("out",length(cybsecorigout)))
)
dat
g=ggplot(dat, aes(x=orig, fill=type)) + geom_density(alpha=.3)
ggplot(dat, aes(x=orig, fill=type)) + geom_density(alpha=.3)
sdat=as.tbl(dat)%>%group_by(type)%>%summarise(mean=mean(orig))
ggplot(dat, aes(x=orig, fill=type)) + geom_density(alpha=.3)+geom_vline(data=sdat, aes(xintercept=mean,  colour=cyb),linetype="dashed", size=1)
ggplot(dat, aes(x=orig, fill=type)) + geom_density(alpha=.3)+geom_vline(data=sdat, aes(xintercept=mean,  colour=type),linetype="dashed", size=1)
is.numeric("12")
as.numeric("12")
as.numeric("12mph")
is.numeric(as.numeric("12mph"))
gsub(x = "30 mph"," ","")
s=gsub(x = "30 mph"," ","")
s=gsub(x = s," ","")
s
sr=gsub(x = s," ","")
normalizedSpeed <- function(s){
if(!is.na(as.numeric(s))){return(as.numeric(s))}
sr=gsub(x = s," ","")
if(grepl("mph",sr)){return(as.numeric(gsub(x = sr,"mph",""))*1.609)}
else{return(NA)}
}
normalizedSpeed("30 mph")
normalizedSpeed("30mph")
normalizedSpeed("30")
normalizedSpeed(30)
raw <- raster(paste0(Sys.getenv("CN_HOME"),"/Data/PopulationDensity/raw/density_wgs84.tif"))
library(raster)
raw <- raster(paste0(Sys.getenv("CN_HOME"),"/Data/PopulationDensity/raw/density_wgs84.tif"))
raw
xyFromCell()
xyFromCell
xyFromCell(raw,1230)
library(RPostgreSQL)
library(rgeos)
con = dbConnect(dbDriver("PostgreSQL"), dbname="osm_simpl",user="Juste",host="localhost" )
query = dbSendQuery(con,"SELECT ST_AsText(geography) AS geom FROM links;")
data = fetch(query,n=-1)
geoms = data$geom
roads=list()
for(i in 1:length(geoms)){
r=readWKT(geoms[i])@lines[[1]];r@ID=as.character(i)
roads[[i]]=r
}
splines = SpatialLines(LinesList = roads)
plot(splines)
library(igraph)
help("difference")
real_raw = read.csv(
paste0(Sys.getenv("CN_HOME"),'/Results/Morphology/Density/Numeric/20150806_europe50km_10kmoffset_100x100grid.csv'),
sep=";"
)
real =real_raw[!is.na(real_raw[,3])&!is.na(real_raw[,4])&!is.na(real_raw[,5])&!is.na(real_raw[,6])&!is.na(real_raw[,7])&!is.na(real_raw[,8])&!is.na(real_raw[,9]),]
for(j in 1:ncol(real)){real[,j]=(real[,j]-min(real[,j]))/(max(real[,j])-min(real[,j]))}
library(RColorBrewer)
library(ggplot2)
library(MASS)
source(paste0(Sys.getenv('CN_HOME'),'/Models/Utils/R/plots.R'))
real_raw = read.csv(
paste0(Sys.getenv("CN_HOME"),'/Results/Morphology/Density/Numeric/20150806_europe50km_10kmoffset_100x100grid.csv'),
sep=";"
)
real =real_raw[!is.na(real_raw[,3])&!is.na(real_raw[,4])&!is.na(real_raw[,5])&!is.na(real_raw[,6])&!is.na(real_raw[,7])&!is.na(real_raw[,8])&!is.na(real_raw[,9]),]
real_ind = real[5*(0:(nrow(real)/5))+1,]
names(real)
indic="moran"
p = ggplot(data.frame(x=real$y,y=1-real$x,density_max=real[[indic]]),aes(x=x,y=y,colour=density_max))
p+geom_point()+xlab("")+ylab("")+labs(title=indic)+scale_colour_gradientn(colours=rev(rainbow(5)))+scale_y_continuous(breaks=NULL)+scale_x_continuous(breaks=NULL)
indic="distance"
p = ggplot(data.frame(x=real$y,y=1-real$x,density_max=real[[indic]]),aes(x=x,y=y,colour=density_max))
p+geom_point()+xlab("")+ylab("")+labs(title=indic)+scale_colour_gradientn(colours=rev(rainbow(5)))+scale_y_continuous(breaks=NULL)+scale_x_continuous(breaks=NULL)
map<-function(indic){
d=data.frame(x=real$y,y=1-real$x);d[[indic]]=real[[indic]]
p=ggplot(d,aes_string(x="x",y="y",colour=indic))
p+geom_point(shape=".",size=2)+xlab("")+ylab("")+labs(title=indic)+scale_colour_gradientn(colours=rev(rainbow(5)))+scale_y_continuous(breaks=NULL)+scale_x_continuous(breaks=NULL)
}
# multiplots
indics=c("moran","distance","entropy","slope")
plots=list();k=1
for(indic in indics){
plots[[k]]=map(indic)
k=k+1
}
multiplot(plotlist=plots,cols=2)
map<-function(indic){
d=data.frame(x=real$y,y=1-real$x);d[[indic]]=real[[indic]]
p=ggplot(d,aes_string(x="x",y="y",colour=indic))
p+geom_point(shape=".",size=1)+xlab("")+ylab("")+labs(title=indic)+scale_colour_gradientn(colours=rev(rainbow(5)))+scale_y_continuous(breaks=NULL)+scale_x_continuous(breaks=NULL)
}
# multiplots
indics=c("moran","distance","entropy","slope")
plots=list();k=1
for(indic in indics){
plots[[k]]=map(indic)
k=k+1
}
multiplot(plotlist=plots,cols=2)
names(real)
vars = c(3,4,5,6)
ccoef=c()
for(k in 2:15){
show(k)
clust = kmeans(real[,vars],k,iter.max=30)
#ccoef=append(ccoef,sum(clust$withinss/clust$size)/k)# mean cluster size
ccoef=append(ccoef,clust$tot.withinss/clust$betweenss)# clust coef
plot(real$y,1-real$x,col=clust$cluster,pch='.',cex=3,main=paste0('k=',k),xlab="",ylab="",xaxt='n',yaxt='n')
}
ccoef
vars = c(3,4,5,6)
ccoef=c()
for(k in 2:15){
show(k)
clust = kmeans(real[,vars],k,iter.max=30)
#ccoef=append(ccoef,sum(clust$withinss/clust$size)/k)# mean cluster size
ccoef=append(ccoef,clust$tot.withinss/(clust$betweenss+clust$tot.withinss))# clust coef
plot(real$y,1-real$x,col=clust$cluster,pch='.',cex=3,main=paste0('k=',k),xlab="",ylab="",xaxt='n',yaxt='n')
}
ccoef
vars = c(3,4,5,6)
ccoef=c()
par(mfrow=c(3,3))
for(k in 2:11){
show(k)
clust = kmeans(real[,vars],k,iter.max=30)
#ccoef=append(ccoef,sum(clust$withinss/clust$size)/k)# mean cluster size
withinProp=clust$tot.withinss/(clust$betweenss+clust$tot.withinss)
ccoef=append(ccoef,withinProp)# clust coef
plot(real$y,1-real$x,col=clust$cluster,pch='.',cex=3,main=paste0('k=',k,' ; withinProp=',withinProp),xlab="",ylab="",xaxt='n',yaxt='n')
}
vars = c(3,4,5,6)
ccoef=c()
par(mfrow=c(3,3))
for(k in 3:11){
show(k)
clust = kmeans(real[,vars],k,iter.max=30)
#ccoef=append(ccoef,sum(clust$withinss/clust$size)/k)# mean cluster size
withinProp=clust$tot.withinss/(clust$betweenss+clust$tot.withinss)
ccoef=append(ccoef,withinProp)# clust coef
plot(real$y,1-real$x,col=clust$cluster,pch='.',cex=3,main=paste0('k=',k,' ; withinProp=',withinProp),xlab="",ylab="",xaxt='n',yaxt='n')
}
shiny::runApp('~/Documents/ComplexSystems/CyberGeo/cybergeo20/Cybergeo20')
help("forceNetwork")
setwd(paste0(Sys.getenv('CS_HOME'),'/PatentsMining/Models/Semantic'))
library(dplyr)
library(igraph)
source('networkConstruction.R')
load('sensitivity/relevant_full_100000.RData')
getwd()
list.files()
list.dirs()
load('sensitivity/relevant_2010_full_100000.RData')
names(d)
names(d)[ncol(d)-2]="balance"
g = ggplot(d) + scale_fill_gradient(low="yellow",high="red")#+ geom_raster(hjust = 0, vjust = 0)
plots=list()
for(indic in c("modularity","communities","components","vertices","density","balance")){
plots[[indic]] = g+geom_raster(aes_string("degree_max","edge_th",fill=indic))+facet_grid(freqmax~freqmin)
}
multiplot(plotlist = plots,cols=3)
library(ggplot2)
source('/Users/Juste/Documents/ComplexSystems/CityNetwork/Models/Utils/R/plots.R')
mulitplot
g = ggplot(d) + scale_fill_gradient(low="yellow",high="red")#+ geom_raster(hjust = 0, vjust = 0)
plots=list()
for(indic in c("modularity","communities","components","vertices","density","balance")){
plots[[indic]] = g+geom_raster(aes_string("degree_max","edge_th",fill=indic))+facet_grid(freqmax~freqmin)
}
multiplot(plotlist = plots,cols=3)
load('sensitivity/relevant_2000_full_100000.RData')
names(d)[ncol(d)-2]="balance"
g = ggplot(d) + scale_fill_gradient(low="yellow",high="red")#+ geom_raster(hjust = 0, vjust = 0)
plots=list()
for(indic in c("modularity","communities","components","vertices","density","balance")){
plots[[indic]] = g+geom_raster(aes_string("degree_max","edge_th",fill=indic))+facet_grid(freqmax~freqmin)
}
multiplot(plotlist = plots,cols=3)
source('networkConstruction.R')
year = 2010
load(paste0('processed/','relevant_',year,'_full_100000.RData'))
g=res$g;
rm(res);gc()
g = filterGraph(g,'data/filter.csv')
clust = clusters(g);cmax = which(clust$csize==max(clust$csize))
ggiant = induced.subgraph(g,which(clust$membership==cmax))
list.dirs
list.dirs()
list.dirs('processed')
list.dirs(path='processed')
list.files(path='processed')
year = 2010
#load(paste0('processed/','relevant_',year,'_full_100000.RData'))
load(paste0('processed/',year,'.RData'))
g=res$g;
rm(res);gc()
g
load(paste0('processed/',year,'.RData'))
g=nw$g;
g
g = filterGraph(g,'data/filter.csv')
g
d=degree(g)
max(d)
0.05*2655
sub=extractSubGraphCommunities(ggiant,kmin,kmax,freqmin,freqmax,edge_th)
clust = clusters(g);cmax = which(clust$csize==max(clust$csize))
ggiant = induced.subgraph(g,which(clust$membership==cmax))
ggiant
sub=extractSubGraphCommunities(ggiant,kmin,kmax,freqmin,freqmax,edge_th)
kmin = 0
kmax = 140
edge_th = 100
freqmin=50
freqmax=5000
sub=extractSubGraphCommunities(ggiant,kmin,kmax,freqmin,freqmax,edge_th)
sub$gg
kmin = 0
kmax = 800
edge_th = 100
freqmin=50
freqmax=5000
sub=extractSubGraphCommunities(ggiant,kmin,kmax,freqmin,freqmax,edge_th)
edge_th = 10
edge_th = 10
edge_th = 10
freqmin=50
kmin = 0
kmax = 800
edge_th = 10
freqmin=50
freqmax=5000
sub=extractSubGraphCommunities(ggiant,kmin,kmax,freqmin,freqmax,edge_th)
kmin = 0
kmax = 800
edge_th = 10
freqmin=50
freqmax=10000
kmin = 0
sub=extractSubGraphCommunities(ggiant,kmin,kmax,freqmin,freqmax,edge_th)
V(ggiant)
ggiant
year = 2010
graph=paste0('relevant_',year,'_full_100000')
load(paste0('processed/',graph,'.RData'))
g=nw$g;
g
rm(nw)
gc()
g=res$g;
rm(res);gc()
g
g = filterGraph(g,'data/filter.csv')
clust = clusters(g);cmax = which(clust$csize==max(clust$csize))
ggiant = induced.subgraph(g,which(clust$membership==cmax))
ggiant
kmin = 0
kmax = 800
edge_th = 10
freqmin=50
freqmax=10000
sub=extractSubGraphCommunities(ggiant,kmin,kmax,freqmin,freqmax,edge_th)
sub$com
kmin = 0
kmax = 200
edge_th = 10
freqmin=50
freqmax=10000
sub=extractSubGraphCommunities(ggiant,kmin,kmax,freqmin,freqmax,edge_th)
sub$gg
sub$com
sizes(sub$com)
write.graph(gg,file = 'graphs/fung/test.gml',format = "gml")
write.graph(sub$gg,file = 'graphs/fung/test.gml',format = "gml")
mean(sizes(sub$com))
communities(sub$gg)
communities(sub$com)
kmin = 0
kmax = 200
edge_th = 10
freqmin=50
freqmax=10000
sub=extractSubGraphCommunities(ggiant,kmin,kmax,freqmin,freqmax,edge_th)
sub$gg;sub$com
kmin = 0
kmax = 100
edge_th = 10
freqmin=50
freqmax=10000
sub=extractSubGraphCommunities(ggiant,kmin,kmax,freqmin,freqmax,edge_th)
sub$gg;sub$com
kmin = 0
kmax = 100
edge_th = 50
freqmin=50
freqmax=10000
sub=extractSubGraphCommunities(ggiant,kmin,kmax,freqmin,freqmax,edge_th)
sub$gg;sub$com
kmin = 0
kmax = 500
edge_th = 50
freqmin=50
freqmax=10000
sub=extractSubGraphCommunities(ggiant,kmin,kmax,freqmin,freqmax,edge_th)
sub$gg;sub$com
load('sensitivity/relevant_2000_full_100000.RData')
comsizes
quantile(comsizes[[2112]])
quantile(comsizes[[2112]],(1:9)/10)
names(d)
i=1
comsizes[[i]]/d$vertices[i]
load('sensitivity/relevant_2010_full_100000.RData')
load(paste0('processed/',graph,'.RData'))
length(res$keyword_dico)
odjdec=c(7,45,90,162,253,372,598,1023,2209)/length(res$keyword_dico)
objdec
odjdec=c(7,45,90,162,253,372,598,1023,2209)/length(res$keyword_dico)
objdec=c(7,45,90,162,253,372,598,1023,2209)/length(res$keyword_dico)
objdec
msesizes=c()
for(i in 1:length(comsizes)){
msesizes=append(msesizes,sum((comsizes[[i]]/d$vertices[i]-objdec)^2))
}
comsizes[[i]]/d$vertices[i]
msesizes=c()
for(i in 1:length(comsizes)){
msesizes=append(msesizes,sum((quantile(comsizes[[i]],(1:9)/10)/d$vertices[i]-objdec)^2))
}
msesizes
d=cbind(msesizes,d)
d
names(d)
g = ggplot(d) + scale_fill_gradient(low="yellow",high="red")#+ geom_raster(hjust = 0, vjust = 0)
plots=list()
for(indic in c("modularity","communities","components","vertices","msesizes","balance")){
plots[[indic]] = g+geom_raster(aes_string("degree_max","edge_th",fill=indic))+facet_grid(freqmax~freqmin)
}
multiplot(plotlist = plots,cols=3)
load('sensitivity/relevant_2010_full_100000.RData')
names(d)[ncol(d)-2]="balance"
objdec=c(7,45,90,162,253,372,598,1023,2209)/length(res$keyword_dico)
# load from classes file
msesizes=c()
for(i in 1:length(comsizes)){
msesizes=append(msesizes,sum((quantile(comsizes[[i]],(1:9)/10)/d$vertices[i]-objdec)^2))
}
d=cbind(msesizes,d)
g = ggplot(d) + scale_fill_gradient(low="yellow",high="red")#+ geom_raster(hjust = 0, vjust = 0)
plots=list()
for(indic in c("modularity","communities","components","vertices","msesizes","balance")){
plots[[indic]] = g+geom_raster(aes_string("degree_max","edge_th",fill=indic))+facet_grid(freqmax~freqmin)
}
multiplot(plotlist = plots,cols=3)
load('sensitivity/relevant_2010_full_100000.RData')
names(d)[ncol(d)-2]="balance"
objdec=c(7,45,90,162,253,372,598,1023,2209)/length(res$keyword_dico)
# load from classes file
msesizes=c()
for(i in 1:length(comsizes)){
msesizes=append(msesizes,sum((log(quantile(comsizes[[i]],(1:9)/10)/d$vertices[i])-log(objdec))^2))
}
d=cbind(msesizes,d)
g = ggplot(d) + scale_fill_gradient(low="yellow",high="red")#+ geom_raster(hjust = 0, vjust = 0)
plots=list()
for(indic in c("modularity","communities","components","vertices","msesizes","balance")){
plots[[indic]] = g+geom_raster(aes_string("degree_max","edge_th",fill=indic))+facet_grid(freqmax~freqmin)
}
multiplot(plotlist = plots,cols=3)
