inds
names(d)[inds[which(max(d[inds])==d[inds])]]
d=strength(gg)
yearlycoms[[names(d)[inds[which(max(d[inds])==d[inds])]]]] = com[[k]]
names(d)[inds[which(max(d[inds])==d[inds])]]
rm(nw)
rm(g)
gc()
gc(verbose=TRUE)
URL <- paste0(
"https://cdn.rawgit.com/christophergandrud/networkD3/",
"master/JSONdata/energy.json")
Energy <- jsonlite::fromJSON(URL)
Energy
Energy$nodes
coms
com[[1]]
coms[[1]]
coms[[1]][[1]]
intersect(coms[[1]][[1]],coms[[2]][[1]])
intersect(com1,com2)
coms[[2]][[1]]
intersect(c("a","z","e"),c("a","z","d","c"))
coms=list()
for(year in c("1998","1999","2005","2006","2007","2008","2009","2010")){
show(paste0("year ",year))
load(paste0('processed/',year,'.RData'))
g=nw$g
g = filterGraph(g,'data/filter.csv')
clust = clusters(g);cmax = which(clust$csize==max(clust$csize))
ggiant = induced.subgraph(g,which(clust$membership==cmax))
kmin = 200
kmax = 20000
edge_th = 20
#d=degree(ggiant)
d=strength(ggiant)
gg=induced_subgraph(ggiant,which(d>kmin&d<kmax))
gg=subgraph.edges(gg,which(E(gg)$weight>edge_th))
d=strength(gg)
com = cluster_louvain(gg)
yearlycoms=list()
for(k in 1:length(com)){
# find name for each com : largest degree node
inds = which(com$membership==k)
yearlycoms[[names(d)[inds[which(max(d[inds])==d[inds])]]]] = com[[k]]
}
coms[[year]]=yearlycoms
}
inds = which(com$membership==k)
inds
names(d)
names(d)[inds[which(max(d[inds])==d[inds])]]
names(d)[inds[which(max(d[inds])==d[inds])[1]]]
yearlycoms[[names(d)[inds[which(max(d[inds])==d[inds])[1]]]]] = com[[k]]
coms=list()
for(year in c("1998","1999","2005","2006","2007","2008","2009","2010")){
show(paste0("year ",year))
load(paste0('processed/',year,'.RData'))
g=nw$g
g = filterGraph(g,'data/filter.csv')
clust = clusters(g);cmax = which(clust$csize==max(clust$csize))
ggiant = induced.subgraph(g,which(clust$membership==cmax))
kmin = 200
kmax = 20000
edge_th = 20
#d=degree(ggiant)
d=strength(ggiant)
gg=induced_subgraph(ggiant,which(d>kmin&d<kmax))
gg=subgraph.edges(gg,which(E(gg)$weight>edge_th))
d=strength(gg)
com = cluster_louvain(gg)
yearlycoms=list()
for(k in 1:length(com)){
# find name for each com : largest degree node
inds = which(com$membership==k)
yearlycoms[[names(d)[inds[which(max(d[inds])==d[inds])[1]]]]] = com[[k]]
}
coms[[year]]=yearlycoms
}
# construct distances between comunities
nodes=list()
links=list()
# communities as list in time of list of kws
#   list(year1 = list(com1 = c(...), com2 = c(...)))
similarityIndex <- function(com1,com2){
return(1 - 2 * length(intersect(com1,com2))/(length(com1)+length(com2)))
}
k=1
for(year in years){
for(comname in names(coms[[year]])){
nodes[[paste0(comname,"_",year)]]=k
}
}
years = c("1998","1999","2005","2006","2007","2008","2009","2010")
k=1
for(year in years){
for(comname in names(coms[[year]])){
nodes[[paste0(comname,"_",year)]]=k
k=k+1
}
}
nodes
k=1
for(t in 2:length(years)){
prec = coms[[years[t-1]]];current = coms[[years[t]]]
for(i in 1:length(prec)){
for(j in 1:length(current)){
weight = similarityIndex(prec[[i]],prec[[j]])
links[[k]] = c(nodes[[paste0(names(prec)[i],"_",years[t-1])]],nodes[[paste0(names(current)[j],"_",years[t])]],weight)
k = k + 1
}
}
}
k=1
for(t in 2:length(years)){
prec = coms[[years[t-1]]];current = coms[[years[t]]]
for(i in 1:length(prec)){
for(j in 1:length(current)){
weight = similarityIndex(prec[[i]],current[[j]])
links[[k]] = c(nodes[[paste0(names(prec)[i],"_",years[t-1])]],nodes[[paste0(names(current)[j],"_",years[t])]],weight)
k = k + 1
}
}
}
length(links)
links
similarityIndex <- function(com1,com2){
return(2 * length(intersect(com1,com2))/(length(com1)+length(com2)))
}
# data.frame with source (id), target (id) and value = weight
k=1
for(t in 2:length(years)){
prec = coms[[years[t-1]]];current = coms[[years[t]]]
for(i in 1:length(prec)){
for(j in 1:length(current)){
weight = similarityIndex(prec[[i]],current[[j]])
if(weight>0){
links[[k]] = c(nodes[[paste0(names(prec)[i],"_",years[t-1])]],nodes[[paste0(names(current)[j],"_",years[t])]],weight)
k = k + 1
}
}
}
}
links=list()
k=1
for(t in 2:length(years)){
prec = coms[[years[t-1]]];current = coms[[years[t]]]
for(i in 1:length(prec)){
for(j in 1:length(current)){
weight = similarityIndex(prec[[i]],current[[j]])
if(weight>0){
links[[k]] = c(nodes[[paste0(names(prec)[i],"_",years[t-1])]],nodes[[paste0(names(current)[j],"_",years[t])]],weight)
k = k + 1
}
}
}
}
links
unlist(links)
matrix(data = unlist(links),ncol=3)
matrix(data = unlist(links),ncol=3,byrow=TRUE)
mlinks=matrix(data = unlist(links),ncol=3,byrow=TRUE)
names(mlinks)<-c("from","to","weight")
mlinks
mlinks=as.data.frame(matrix(data = unlist(links),ncol=3,byrow=TRUE))
mlinks
names(mlinks)<-c("from","to","weight")
mlinks
head(mlinks)
names(nodes)
mnodes = as.data.frame( names(nodes))
mnodes
names(mnodes) = c("name")
library(networkD3)
sankeyNetwork(Links = mlinks, Nodes = names(nodes), Source = "from",
Target = "to", Value = "weight", NodeID = "name",
,fontSize = 12, nodeWidth = 30)
sankeyNetwork(Links = mlinks, Nodes = mnodes, Source = "from",
Target = "to", Value = "weight", NodeID = "name",
,fontSize = 12, nodeWidth = 30)
sankeyNetwork(Links = mlinks, Nodes = mnodes, Source = "from",
Target = "to", Value = "weight", NodeID = "name",
,fontSize = 12, nodeWidth = 100)
links
k=1
for(t in 2:length(years)){
prec = coms[[years[t-1]]];current = coms[[years[t]]]
for(i in 1:length(prec)){
for(j in 1:length(current)){
weight = similarityIndex(prec[[i]],current[[j]])
if(weight>0.1){
links[[k]] = c(nodes[[paste0(names(prec)[i],"_",years[t-1])]],nodes[[paste0(names(current)[j],"_",years[t])]],weight)
k = k + 1
}
}
}
}
links=list()
# data.frame with source (id), target (id) and value = weight
k=1
for(t in 2:length(years)){
prec = coms[[years[t-1]]];current = coms[[years[t]]]
for(i in 1:length(prec)){
for(j in 1:length(current)){
weight = similarityIndex(prec[[i]],current[[j]])
if(weight>0.1&length(prec[[i]])>5&length(current[[j]]>5)){
links[[k]] = c(nodes[[paste0(names(prec)[i],"_",years[t-1])]],nodes[[paste0(names(current)[j],"_",years[t])]],weight)
k = k + 1
}
}
}
}
links
mlinks=as.data.frame(matrix(data = unlist(links),ncol=3,byrow=TRUE))
names(mlinks)<-c("from","to","weight")
mnodes = as.data.frame( names(nodes))
names(mnodes) = c("name")
# plot the graph
sankeyNetwork(Links = mlinks, Nodes = mnodes, Source = "from",
Target = "to", Value = "weight", NodeID = "name",
,fontSize = 12, nodeWidth = 100)
links=list();nodes=list()
# data.frame with source (id), target (id) and value = weight
k=1;kn=1
for(t in 2:length(years)){
prec = coms[[years[t-1]]];current = coms[[years[t]]]
for(i in 1:length(prec)){
for(j in 1:length(current)){
weight = similarityIndex(prec[[i]],current[[j]])
if(weight>0.1&length(prec[[i]])>5&length(current[[j]]>5)){
precname=paste0(names(prec)[i],"_",years[t-1]);currentname=paste0(names(current)[j],"_",years[t])
if(!(precname %in% names(nodes))){nodes[[precname]]=kn;kn=kn+1}
if(!(currentname %in% names(nodes))){nodes[[currentname]]=kn;kn=kn+1}
links[[k]] = c(nodes[[precname]],nodes[[currentname]],weight)
k = k + 1
}
}
}
}
length(nodes)
mlinks=as.data.frame(matrix(data = unlist(links),ncol=3,byrow=TRUE))
names(mlinks)<-c("from","to","weight")
mnodes = as.data.frame( names(nodes))
names(mnodes) = c("name")
# plot the graph
sankeyNetwork(Links = mlinks, Nodes = mnodes, Source = "from",
Target = "to", Value = "weight", NodeID = "name",
,fontSize = 12, nodeWidth = 100)
links
mlinks
mnodes
# plot the graph
sankeyNetwork(Links = mlinks, Nodes = mnodes, Source = "from",
Target = "to", Value = "weight", NodeID = "name",
,fontSize = 12, nodeWidth = 30)
mlinks=as.data.frame(matrix(data = unlist(links),ncol=3,byrow=TRUE))
names(mlinks)<-c("from","to","weight")
mnodes = as.data.frame( names(nodes))
names(mnodes) = c("name")
# plot the graph
sankeyNetwork(Links = mlinks, Nodes = mnodes, Source = "from",
Target = "to", Value = "weight", NodeID = "name",
,fontSize = 12, nodeWidth = 30)
sankeyNetwork(Links = mlinks, Nodes = mnodes, Source = "from",
Target = "to", Value = "weight", NodeID = "name",
,fontSize = 12, nodeWidth = 1)
length(links)
length(mlinks)
dim(mlinks)
dim(mnodes)
help("sankeyNetwork")
sankeyNetwork(Links = mlinks, Nodes = mnodes, Source = "from",
Target = "to", Value = "weight", NodeID = "name",
,fontSize = 12, nodeWidth = 100)
sankeyNetwork(Links = mlinks, Nodes = mnodes, Source = "from",
Target = "to", Value = 1, NodeID = "name",
,fontSize = 12, nodeWidth = 100)
mnodes
head(mlinks)
sankeyNetwork(Links = mlinks, Nodes = mnodes)
sankeyNetwork(Links = mlinks, Nodes = mnodes)
sankeyNetwork(Links = Energy$links, Nodes = Energy$nodes, Source = "source",Target = "target", Value = "value", NodeID = "name",units = "TWh", fontSize = 12, nodeWidth = 30)
Energy$links
Energy$nodes
mlinks=as.data.frame(matrix(data = unlist(links),ncol=3,byrow=TRUE))
names(mlinks)<-c("from","to","weight")
mlinks$weight=1000*mlinks$weight
mnodes = as.data.frame( names(nodes))
names(mnodes) = c("name")
sankeyNetwork(Links = mlinks, Nodes = mnodes, Source = "from",
Target = "to", Value = "weight", NodeID = "name",
,fontSize = 12, nodeWidth = 30)
mnodes
mlinks
sankeyNetwork(Links = mlinks, Nodes = mnodes, Source = "from",
Target = "to", Value = "weight", NodeID = "name",
,fontSize = 12, nodeWidth = 30)
links=list();nodes=list()
# data.frame with source (id), target (id) and value = weight
k=1;kn=1
for(t in 2:length(years)){
prec = coms[[years[t-1]]];current = coms[[years[t]]]
for(i in 1:length(prec)){
for(j in 1:length(current)){
weight = similarityIndex(prec[[i]],current[[j]])
#if(weight>0.1&length(prec[[i]])>5&length(current[[j]]>5)){
precname=paste0(names(prec)[i],"_",years[t-1]);currentname=paste0(names(current)[j],"_",years[t])
if(!(precname %in% names(nodes))){nodes[[precname]]=kn;kn=kn+1}
if(!(currentname %in% names(nodes))){nodes[[currentname]]=kn;kn=kn+1}
links[[k]] = c(nodes[[precname]],nodes[[currentname]],weight)
k = k + 1
#}
}
}
}
mlinks=as.data.frame(matrix(data = unlist(links),ncol=3,byrow=TRUE))
names(mlinks)<-c("from","to","weight")
mlinks$weight=1000*mlinks$weight
mnodes = as.data.frame( names(nodes))
names(mnodes) = c("name")
# plot the graph
sankeyNetwork(Links = mlinks, Nodes = mnodes, Source = "from",
Target = "to", Value = "weight", NodeID = "name",
,fontSize = 12, nodeWidth = 30)
mlinks=as.data.frame(matrix(data = unlist(links),ncol=3,byrow=TRUE))
names(mlinks)<-c("from","to","weight")
#mlinks$weight=1000*mlinks$weight
mnodes = as.data.frame( names(nodes))
names(mnodes) = c("name")
# plot the graph
sankeyNetwork(Links = mlinks, Nodes = mnodes, Source = "from",
Target = "to", Value = "weight", NodeID = "name",
,fontSize = 12, nodeWidth = 30)
Energy$nodes
Energy$links
mlinks
links=list();nodes=list()
# data.frame with source (id), target (id) and value = weight
k=1;kn=1
for(t in 2:length(years)){
prec = coms[[years[t-1]]];current = coms[[years[t]]]
for(i in 1:length(prec)){
for(j in 1:length(current)){
weight = similarityIndex(prec[[i]],current[[j]])
if(weight>0.1&length(prec[[i]])>5&length(current[[j]]>5)){
precname=paste0(names(prec)[i],"_",years[t-1]);currentname=paste0(names(current)[j],"_",years[t])
if(!(precname %in% names(nodes))){nodes[[precname]]=kn;kn=kn+1}
if(!(currentname %in% names(nodes))){nodes[[currentname]]=kn;kn=kn+1}
links[[k]] = c(nodes[[precname]],nodes[[currentname]],weight)
k = k + 1
}
}
}
}
mlinks=as.data.frame(matrix(data = unlist(links),ncol=3,byrow=TRUE))
names(mlinks)<-c("from","to","weight")
#mlinks$weight=1000*mlinks$weight
mnodes = as.data.frame( names(nodes))
names(mnodes) = c("name")
is.data.frame(mnodes)
length(mnodes)
dim'mnodes'
dim(mnodes)
mnodes
mlinks
graph_from_data_frame(mlinks,vertices=mnodes)
mnodes = as.data.frame(1:length(nodes),names(nodes))
names(mnodes) = c("id","name")
mnodes = as.data.frame(1:length(nodes),names(nodes))
mnodes
mnodes = as.data.frame(id=1:length(nodes),name=names(nodes))
mnodes = data.frame(id=1:length(nodes),name=names(nodes))
mnodes
graph_from_data_frame(mlinks,vertices=mnodes)
plot(graph_from_data_frame(mlinks,vertices=mnodes))
sankeyNetwork(Links = mlinks, Nodes = mnodes, Source = "from",
Target = "to", Value = "weight", NodeID = "name",
,fontSize = 12, nodeWidth = 30)
sankeyNetwork(Links = mlinks, Nodes = mnodes, Source = "from",
Target = "to", Value = "weight", NodeID = "name",
,fontSize = 12, nodeWidth = 30,nodePadding = 100)
k=1
for(year in years){
for(comname in names(coms[[year]])){
nodes[[paste0(comname,"_",year)]]=k
k=k+1
}
}
links=list();
#nodes=list()
# data.frame with source (id), target (id) and value = weight
k=1;kn=1
for(t in 2:length(years)){
prec = coms[[years[t-1]]];current = coms[[years[t]]]
for(i in 1:length(prec)){
for(j in 1:length(current)){
weight = similarityIndex(prec[[i]],current[[j]])
if(weight>0.1&length(prec[[i]])>5&length(current[[j]]>5)){
precname=paste0(names(prec)[i],"_",years[t-1]);currentname=paste0(names(current)[j],"_",years[t])
#if(!(precname %in% names(nodes))){nodes[[precname]]=kn;kn=kn+1}
#if(!(currentname %in% names(nodes))){nodes[[currentname]]=kn;kn=kn+1}
links[[k]] = c(nodes[[precname]],nodes[[currentname]],weight)
k = k + 1
}
}
}
}
mlinks=as.data.frame(matrix(data = unlist(links),ncol=3,byrow=TRUE))
names(mlinks)<-c("from","to","weight")
#mlinks$weight=1000*mlinks$weight
mnodes = data.frame(id=1:length(nodes),name=names(nodes))
sankeyNetwork(Links = mlinks, Nodes = mnodes, Source = "from",
Target = "to", Value = "weight", NodeID = "name",
,fontSize = 12, nodeWidth = 30,nodePadding = 100)
sankeyNetwork(Links = mlinks, Nodes = mnodes, Source = "from",
Target = "to", Value = "weight", NodeID = "name",
,fontSize = 12, nodeWidth = 30)
forceNetwork(Links = mlinks, Nodes = mnodes, Source = "from",
Target = "to", Value = "weight", NodeID = "name")
forceNetwork(Links = mlinks, Nodes = mnodes, Source = "from",
Target = "to", Value = "weight", NodeID = "name",Group="name")
links=list();
nodes=list()
# data.frame with source (id), target (id) and value = weight
k=1;kn=1
for(t in 2:length(years)){
prec = coms[[years[t-1]]];current = coms[[years[t]]]
for(i in 1:length(prec)){
for(j in 1:length(current)){
weight = similarityIndex(prec[[i]],current[[j]])
if(weight>0.1&length(prec[[i]])>5&length(current[[j]]>5)){
precname=paste0(names(prec)[i],"_",years[t-1]);currentname=paste0(names(current)[j],"_",years[t])
if(!(precname %in% names(nodes))){nodes[[precname]]=kn;kn=kn+1}
if(!(currentname %in% names(nodes))){nodes[[currentname]]=kn;kn=kn+1}
links[[k]] = c(nodes[[precname]],nodes[[currentname]],weight)
k = k + 1
}
}
}
}
mlinks=as.data.frame(matrix(data = unlist(links),ncol=3,byrow=TRUE))
names(mlinks)<-c("from","to","weight")
#mlinks$weight=1000*mlinks$weight
mnodes = data.frame(id=1:length(nodes),name=names(nodes))
forceNetwork(Links = mlinks, Nodes = mnodes, Source = "from",
Target = "to", Value = "weight", NodeID = "name",Group="name")
# -> data.frame with name
k=1
for(year in years){
for(comname in names(coms[[year]])){
nodes[[paste0(comname,"_",year)]]=k
k=k+1
}
}
# compute edges
links=list();
#nodes=list()
# data.frame with source (id), target (id) and value = weight
k=1;kn=1
for(t in 2:length(years)){
prec = coms[[years[t-1]]];current = coms[[years[t]]]
for(i in 1:length(prec)){
for(j in 1:length(current)){
weight = similarityIndex(prec[[i]],current[[j]])
if(weight>0.1&length(prec[[i]])>5&length(current[[j]]>5)){
precname=paste0(names(prec)[i],"_",years[t-1]);currentname=paste0(names(current)[j],"_",years[t])
#if(!(precname %in% names(nodes))){nodes[[precname]]=kn;kn=kn+1}
#if(!(currentname %in% names(nodes))){nodes[[currentname]]=kn;kn=kn+1}
links[[k]] = c(nodes[[precname]],nodes[[currentname]],weight)
k = k + 1
}
}
}
}
mlinks=as.data.frame(matrix(data = unlist(links),ncol=3,byrow=TRUE))
names(mlinks)<-c("from","to","weight")
#mlinks$weight=1000*mlinks$weight
mnodes = data.frame(id=1:length(nodes),name=names(nodes))
forceNetwork(Links = mlinks, Nodes = mnodes, Source = "from",
Target = "to", Value = "weight", NodeID = "name",Group="name")
links=list();
nodes=list()
# data.frame with source (id), target (id) and value = weight
k=1;kn=0
for(t in 2:length(years)){
prec = coms[[years[t-1]]];current = coms[[years[t]]]
for(i in 1:length(prec)){
for(j in 1:length(current)){
weight = similarityIndex(prec[[i]],current[[j]])
if(weight>0.1&length(prec[[i]])>5&length(current[[j]]>5)){
precname=paste0(names(prec)[i],"_",years[t-1]);currentname=paste0(names(current)[j],"_",years[t])
if(!(precname %in% names(nodes))){nodes[[precname]]=kn;kn=kn+1}
if(!(currentname %in% names(nodes))){nodes[[currentname]]=kn;kn=kn+1}
links[[k]] = c(nodes[[precname]],nodes[[currentname]],weight)
k = k + 1
}
}
}
}
mlinks=as.data.frame(matrix(data = unlist(links),ncol=3,byrow=TRUE))
names(mlinks)<-c("from","to","weight")
#mlinks$weight=1000*mlinks$weight
mnodes = data.frame(id=1:length(nodes),name=names(nodes))
sankeyNetwork(Links = mlinks, Nodes = mnodes, Source = "from",
Target = "to", Value = "weight", NodeID = "name",
,fontSize = 12, nodeWidth = 30)
sankeyNetwork(Links = mlinks, Nodes = mnodes, Source = "from",
Target = "to", Value = "weight", NodeID = "name",
,fontSize = 12, nodeWidth = 100)
sankeyNetwork(Links = mlinks, Nodes = mnodes, Source = "from",
Target = "to", Value = "weight", NodeID = "name",
,fontSize = 12, nodeWidth = 20)
