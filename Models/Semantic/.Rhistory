graph = as_igraph(data_ways)
clusters(graph)
bigcomponent = decompose.graph(graph)[[1]]
hist(betweenness(bigcomponent),breaks=100)
hist(betweenness(bigcomponent),breaks=500)
hist(log(betweenness(bigcomponent)),breaks=500)
hist(betweenness(bigcomponent),breaks=500)
betweenness(bigcomponent)
mean(betweenness(bigcomponent))
radius(bigcomponent)
graph
graph$weight
E(graph)
leading.eigenvector.community(bigcomponent)
leading.eigenvector.community(bigcomponent,steps=10000)
edge.betweenness.community(bigcomponent)
membership(edge.betweenness.community(bigcomponent))
help(layout)
layout.fruchterman.reingold(graph)
layout.fruchterman.reingold(bigcomponent)
com <- membership(edge.betweenness.community(bigcomponent))
lay<-layout.fruchterman.reingold(bigcomponent)
plot(bigcomponent,layout=lay,col=com)
plot(bigcomponent,layout=lay,vertex.col=com)
help(igraph.plot)
com
plot(bigcomponent,layout=lay)
lay
plot(bigcomponent,layout=lay)
plot.graph(bigcomponent,layout=lay)
plot.igraph(bigcomponent,layout=lay)
library(rgexf)
help(rgexf)
igraph.to.graph(bigcomponent)
igraph.to.gexf(bigcomponent)
E(bigcomponent)
E(bigcomponent)$weights
help(as_igrph)
help(as_igraph)
source(as_igraph)
view_source()
graph
graph$V
V(graph)
E(graph)
V(graph)$weight
help(attr)
plot.igraph(bigcomponent,layout=layout.fruchterman.reingold,vertex.color=com)
dim(V(bigcomponent))
V(bigcomponent)
length(V(bigcomponent))
length(E(bigcomponent))
plot.igraph(bigcomponent,layout=layout.fruchterman.reingold,vertex.color=com)
help(plot.igraph)
help(layout)
plot.igraph(bigcomponent,layout=layout.auto,vertex.color=com,label=NA)
plot.igraph(bigcomponent,layout=layout.auto,vertex.color=com,vertex.label=NA)
length(E(bigcomponent))
E(bigcomponent)$weight
V(bigcomponent)$weight
E(bigcomponent)$weight
help(igraph)
str.igraph(bigcomponent)
print.igraph(bigcomponent)
get.edge.attribute(bigcomponent)
names(V(bigcomponent))
graph.attributes(graph)
edge.attributes(graph)
names(edge.attributes(graph))
names(vertex.attributes(graph))
data_ways
data_ways$nodes
names(data_ways$nodes)
naattrsmes(data_ways$nodes)
attrs(data_ways$nodes)
data_ways$nodes$attrs
data_ways$nodes$attrs[1:10,]
V(graph)$id
names(vertex.attributes(graph))
V(graph)$name
names(data$ways$attrs)
data_ways$nodes$attrs
data_ways$nodes$attrs
names(data_ways$nodes$attrs)
x = data_ways$nodes$attrs$lat
y = x = data_ways$nodes$attrs$lon
y =  data_ways$nodes$attrs$lon
x = data_ways$nodes$attrs$lat
y =  data_ways$nodes$attrs$lon
x = data_ways$nodes$attrs$lat
y = data_ways$nodes$attrs$lon
V(graph)$name
V(graph)$x=x
length(x)
length(V(graph))
length(V(graph)$name)
V(graph)$name==names(data_ways$nodes$attrs)
names(data_ways$nodes$attrs)
data_ways$nodes$attrs$id
data_ways$nodes$attrs$id==V(graph)$name
help(graph.empty)
data_ways$nodes
data_ways$nodes$attrs
head(data_ways$nodes$attrs)
head(data_ways$ways$attrs)
head(data_ways$ways)
head(data_ways$ways,n=1)
data_ways$ways[[1]]
names(data_ways$ways)
names(data_ways$ways$refs)
names(data_ways$ways$tags)
names(data_ways$ways)
names(data_ways$ways$attrs)
names(data_ways)
names(data_ways$relations)
names(data_ways$relations$attrs)
names(data_ways$relations$tags)
names(data_ways$relations$refs)
data_ways$relations$refs$type
data_ways$relations$refs$ref
summary(data_ways)
help(as_igraph)
osmar$ways$attrs$uid
data_ways$ways$attrs$uid
data_ways$ways$refs$uid
data_ways$ways$refs
names(data_ways$ways$refs)
graph = graph.edgelist(data_ways$ways$refs)
is.data.frame(data_ways$ways$refs)
is.matrix(data_ways$ways$refs)
graph = graph.edgelist(as.matrix(data_ways$ways$refs))
dim(as.matrix(data_ways$ways$refs))
help(graph.edgelist()
)
help(graph.edgelist)
dim(as.numeric(as.matrix(data_ways$ways$refs)))
as.numeric(as.matrix(data_ways$ways$refs))
length(as.numeric(as.matrix(data_ways$ways$refs)))
graph.edgelist(matrix(data=c(1,0,0,1),nrow=2))
graph.edgelist(matrix(data=c(2,1,1,2),nrow=2))
summary(as.matrix(data_ways$ways$refs))
graph = graph.edgelist(as.matrix(data_ways$ways$refs))
summary(data_ways)
library(rgexf)
help(rgexf)
help(read.gexf)
graph_gexf <- read.gexf(paste0(Sys.getenv('CS_HOME'),'/Cybergeo/cybergeo20/Data/processed/networks/test_citingNW_Wed-Oct-28-23/35/42-CET-2015.gexf'))
graph_gexf <- read.gexf(paste0(Sys.getenv('CS_HOME'),'/Cybergeo/cybergeo20/Data/processed/networks/test_citingNW_Wed-Oct-28-23:35:42-CET-2015.gexf'))
graph = gexf.to.igraph(graph_gexf)
graph_gexf
summary(graph_gexf)
check.dpl.edges(graph_gexf)
graph_gexf <- read.gexf(paste0(Sys.getenv('CS_HOME'),'/Cybergeo/cybergeo20/Data/processed/networks/test_citingNW_Wed-Oct-28-23:35:42-CET-2015.gexf'))
graph = gexf.to.igraph(graph_gexf)
measures <- read.csv(paste0(Sys.getenv('CS_HOME'),'/Cybergeo/cybergeo20/Data/processed/networks/test_citingNW_Wed-Oct-28-23:35:42-CET-2015_Nodes.csv'))
measures <- read.csv(
paste0(Sys.getenv('CS_HOME'),'/Cybergeo/cybergeo20/Data/processed/networks/test_citingNW_Wed-Oct-28-23:35:42-CET-2015_Nodes.csv'),
sep=';'
)
summary(measures)
measures$is_cyber
is.na(measures$cybergeo)
colNames(measures)
colnames(measures)
mean(measures$Degré.Entrant)
mean(measures$Degré.Entrant[!is.na(measures$cybergeo)])
summary(measures$Degré.Entrant[!is.na(measures$cybergeo)])
length(measures$Degré.Entrant[!is.na(measures$cybergeo)])
hist(measures$Degré.Entrant[!is.na(measures$cybergeo)])
hist(measures$Degré.Entrant[!is.na(measures$cybergeo)],breaks=100)
indeg = measures$Degré.Entrant[!is.na(measures$cybergeo)]
hist(indeg,breaks=100)
which(indeg==max(indeg))
measures[908,]
max(indeg)
cyb = measures[!is.na(measures$cybergeo),]
dim(cyb)
cyb[which(indeg==max(indeg)),]
mean(cyb$Degré.Entrant)
mean(cyb$Degré.Entrant[cyb$Degré.Entrant<quantile(cyb$Degré.Entrant,0.9)])
quantile(cyb$Degré.Entrant,0.9)
quantile(cyb$Degré.Entrant,0.95)
mean(cyb$Degré.Entrant[cyb$Degré.Entrant<quantile(cyb$Degré.Entrant,0.95)])
mean(cyb$Degré.Entrant[cyb$Degré.Entrant<quantile(cyb$Degré.Entrant,0.99)])
mean(cyb$Degré.Entrant[cyb$Degré.Entrant<quantile(cyb$Degré.Entrant,0.90)])
quantiles = (1:100)/100
quantiles
impactFactor=mean(cyb$Degré.Entrant)
help(lapply)
contrQuantile = sapply(quantiles,function(q){mean(cyb$Degré.Entrant[cyb$Degré.Entrant<quantile(cyb$Degré.Entrant,q)])/impactFactor})
contrQuantile
mean(cyb$Degré.Entrant[cyb$Degré.Entrant<quantile(cyb$Degré.Entrant,0.10)])
quantile(cyb$Degré.Entrant,0.10)
quantiles = (60:100)/100
impactFactor=mean(cyb$Degré.Entrant)
contrQuantile = sapply(quantiles,function(q){mean(cyb$Degré.Entrant[cyb$Degré.Entrant<quantile(cyb$Degré.Entrant,q)])/impactFactor})
contrQuantile
quantile(cyb$Degré.Entrant,1)
contrQuantile = sapply(quantiles,function(q){mean(cyb$Degré.Entrant[cyb$Degré.Entrant<=quantile(cyb$Degré.Entrant,q)])/impactFactor})
contrQuantile
quantiles = (50:100)/100
impactFactor=mean(cyb$Degré.Entrant)
contrQuantile = sapply(quantiles,function(q){mean(cyb$Degré.Entrant[cyb$Degré.Entrant<=quantile(cyb$Degré.Entrant,q)])/impactFactor})
contrQuantile
plot(quantiles,contrQuantile,type="l")
x=rnorm(100)
x
y=rnorm(100)
plot(x,y,axis=FALSE)
plot(x,y,axes=FALSE)
axis(1,pos=0,5)
axis(1,pos=0)
axis(0,pos=0)
axis(2,pos=0)
df
data
d
d <- function(w){
years = c(1,8,17)
dispo = c(27,5 + w * 10,3+w)
return(data.frame(x=years,y=dispo,xl=log(years),yl=log(dispo)))
}
d(0.5)
weights = (1:100)/100
weights
lm(x~y,d(0.5))
slotnames(lm(x~y,d(0.5)))
slotNames(lm(x~y,d(0.5)))
names(lm(x~y,d(0.5)))
names(summary(lm(x~y,d(0.5)))
)
help(append)
weights = (1:100)/100
rlin = c()
rloglin = c()
for(w in weights){
rlin = append(rlin,summary(lm(y~x,d(w)))$adj.r.squared)
rloglin = append(rloglin,summary(lm(yl~xl,d(w)))$adj.r.squared)
}
rlin
rloglin
plot(weights,rlin)
plot(weights,rloglin)
setwd(paste0(Sys.getenv('CS_HOME'),'/PatentsMining'))
overlap <- read.table('Models//Techno//TechnoClasses//res//overlap.csv',sep=";")
links = 0
for(i in 1:nrow(overlap)){
show(i)
links = links + (overlap[i,i]^2)
if(i<nrow(overlap)){
for(j in (i+1):ncol(overlap)){
overlap[j,j] = overlap[j,j] - overlap[i,j]
}
}
}
setwd(paste0(Sys.getenv('CS_HOME'),'/PatentsMining'))
Sys.getenv('CS_HOME')
setwd(paste0(Sys.getenv('CS_HOME'),'/PatentsMining'))
overlap <- read.table('Models//Techno//TechnoClasses//res//overlap.csv',sep=";")
links = 0
for(i in 1:nrow(overlap)){
show(i)
links = links + (overlap[i,i]^2)
if(i<nrow(overlap)){
for(j in (i+1):ncol(overlap)){
overlap[j,j] = overlap[j,j] - overlap[i,j]
}
}
}
links
links = 0
for(i in 1:nrow(overlap)){
show(i)
links = links + (overlap[i,i]^2)
#if(i<nrow(overlap)){
#  for(j in (i+1):ncol(overlap)){
#    overlap[j,j] = overlap[j,j] - overlap[i,j]
#  }
#}
}
links
nrow(overlap)
links = 0
for(i in 1:nrow(overlap)){
show(i)
links = links + (overlap[i,i]^2)
if(i<nrow(overlap)){
for(j in (i+1):ncol(overlap)){
old=overlap[j,j]
overlap[j,j] = overlap[j,j] - overlap[i,j]
show(overlap[j,j]-old)
}
}
}
links = 0
for(i in 1:nrow(overlap)){
show(i)
links = links + (overlap[i,i]^2)
if(i<nrow(overlap)){
for(j in (i+1):ncol(overlap)){
overlap[j,j] = overlap[j,j] - overlap[i,j]
}
}
}
links
links = 0
for(i in 1:nrow(overlap)){
show(i)
links = links + (overlap[i,i]^2)
if(i<nrow(overlap)){
for(j in (i+1):ncol(overlap)){
overlap[j,j] = overlap[j,j] - overlap[i,j]
}
}
}
links
links = 0
lniks
links
for(i in 1:nrow(overlap)){
show(i)
links = links + (overlap[i,i]^2)
if(i<nrow(overlap)){
for(j in (i+1):ncol(overlap)){
overlap[j,j] = overlap[j,j] - overlap[i,j]
}
}
}
links
links = 0
i
links = links + (overlap[i,i]^2)
links
overlap <- read.table('Models//Techno//TechnoClasses//res//overlap.csv',sep=";")
links = 0
for(i in 1:nrow(overlap)){
show(i)
links = links + (overlap[i,i]^2)
if(i<nrow(overlap)){
for(j in (i+1):ncol(overlap)){
overlap[j,j] = overlap[j,j] - overlap[i,j]
}
}
}
links
a=93457960628
overlap <- read.table('Models//Techno//TechnoClasses//res//overlap.csv',sep=";")
links = 0
for(i in 1:nrow(overlap)){
show(i)
links = links + (overlap[i,i]^2)
#if(i<nrow(overlap)){
#  for(j in (i+1):ncol(overlap)){
#    overlap[j,j] = overlap[j,j] - overlap[i,j]
#  }
#}
}
links
links-a
a
library(Matrix)
library(ggplot2)
library(dplyr)
setwd(paste0(Sys.getenv('CS_HOME'),'/PatentsMining/Models/Semantic'))
wyears = 1980:2012
windowSize=5
year=1980
load(paste0('probas/processed_counts_',(year-windowSize+1),"-",year,'.RData'));show(year)
technoprobas=currentprobas$technoprobas;semprobas=currentprobas$semprobas;rm(currentprobas);gc()
head(semprobas)
rowSums(semprobas)
sizes=c();nsizes=c();years=c();type=c()
for(year in wyears){
load(paste0('probas/processed_counts_',(year-windowSize+1),"-",year,'.RData'));show(year)
technoprobas=currentprobas$technoprobas;semprobas=currentprobas$semprobas;rm(currentprobas);gc()
techsizes=colSums(technoprobas);semsizes=colSums(semprobas)
sizes=append(sizes,techsizes);nsizes=append(nsizes,techsizes/nrow(technoprobas));years=append(years,rep(year,length(techsizes)));type=append(type,rep("techno",length(techsizes)))
sizes=append(sizes,semsizes);nsizes=append(nsizes,semsizes/nrow(semprobas));years=append(years,rep(year,length(semsizes)));type=append(type,rep("techno",length(semsizes)))
}
g=ggplot(data.frame(size=sizes,nsize=nsizes,year=years,type=type),aes(x=sizes,colour=year))
g+geom_density()+scale_x_log10()
g=ggplot(data.frame(size=sizes,nsize=nsizes,year=years,type=type),aes(x=sizes,colour=year))
g+geom_density()#+scale_x_log10()
g=ggplot(data.frame(size=sizes,nsize=nsizes,year=years,type=type),aes(x=sizes,color=year))
g+geom_density()#+scale_x_log10()
unique(years)
g=ggplot(data.frame(size=sizes,nsize=nsizes,years=years,type=type),aes(x=sizes,color=years))
g+geom_density()#+scale_x_log10()
g=ggplot(data.frame(size=sizes,nsize=nsizes,years=as.character(years),type=type),aes(x=sizes,color=years))
g+geom_density()#+scale_x_log10()
g=ggplot(data.frame(size=sizes,nsize=nsizes,years=as.character(years),type=type),aes(x=sizes,color=years))
g+geom_density()+scale_x_log10()
g=ggplot(data.frame(size=sizes,nsize=nsizes,years=as.character(years),type=type),aes(x=sizes,color=years))
g+geom_density()+scale_x_log10()+facet_wrap(~type)
sizes=append(sizes,techsizes);nsizes=append(nsizes,techsizes/nrow(technoprobas));years=append(years,rep(year,length(techsizes)));type=append(type,rep("techno",length(techsizes)))
sizes=c();nsizes=c();years=c();type=c()
for(year in wyears){
load(paste0('probas/processed_counts_',(year-windowSize+1),"-",year,'.RData'));show(year)
technoprobas=currentprobas$technoprobas;semprobas=currentprobas$semprobas;rm(currentprobas);gc()
techsizes=colSums(technoprobas);semsizes=colSums(semprobas)
sizes=append(sizes,techsizes);nsizes=append(nsizes,techsizes/nrow(technoprobas));years=append(years,rep(year,length(techsizes)));type=append(type,rep("techno",length(techsizes)))
sizes=append(sizes,semsizes);nsizes=append(nsizes,semsizes/nrow(semprobas));years=append(years,rep(year,length(semsizes)));type=append(type,rep("semantic",length(semsizes)))
}
g=ggplot(data.frame(size=sizes,nsize=nsizes,years=as.character(years),type=type),aes(x=sizes,color=years))
g+geom_density()+scale_x_log10()+facet_wrap(~type)
g=ggplot(data.frame(size=sizes,nsize=nsizes,years=as.character(years),type=type),aes(x=nsizes,color=years))
g+geom_density()+scale_x_log10()+facet_wrap(~type)
g=ggplot(data.frame(size=sizes,nsize=nsizes,years=as.character(years),type=type),aes(x=years,y=sizes,color=type))
g+geom_point()+geom_line()+scale_y_log10()+facet_wrap(~type)
g+geom_point()+geom_line()+stat_smooth()+scale_y_log10()+facet_wrap(~type)
g=ggplot(data.frame(size=sizes,nsize=nsizes,years=as.character(years),type=type)%>%group_by(years,type)%>%summarise(meansize=mean(sizes),meannsizes=mean(nsizes)),aes(x=years,y=meansize,color=type))
g+geom_point()+geom_line()+stat_smooth()+scale_y_log10()+facet_wrap(~type)
g=ggplot(data.frame(size=sizes,nsize=nsizes,years=as.character(years),type=type)%>%group_by(years,type)%>%summarise(meansize=mean(size),meannsizes=mean(nsize)),aes(x=years,y=meansize,color=type))
g+geom_point()+geom_line()+stat_smooth()+scale_y_log10()+facet_wrap(~type)
g=ggplot(data.frame(size=sizes,nsize=nsizes,years=as.character(years),type=type)%>%group_by(years,type)%>%summarise(meansize=mean(size),meannsizes=mean(nsize)),
aes(x=years,y=meannsize,color=type))
g+geom_point()+geom_line()+stat_smooth()+scale_y_log10()+facet_wrap(~type)
g=ggplot(data.frame(size=sizes,nsize=nsizes,years=as.character(years),type=type)%>%group_by(years,type)%>%summarise(meansize=mean(size),meannsizes=mean(nsize)),
aes(x=years,y=meannsizes,color=type))
g+geom_point()+geom_line()+stat_smooth()+scale_y_log10()+facet_wrap(~type)
g=ggplot(data.frame(size=sizes,nsize=nsizes,years=as.character(years),type=type),aes(x=nsizes,color=years))
g+geom_density()+scale_x_log10()+facet_wrap(~type)
g=ggplot(data.frame(size=sizes,nsize=nsizes,years=as.character(years),type=type),aes(x=sizes,color=years))
g+geom_density()+scale_x_log10()+facet_wrap(~type)
sizes=c();nsizes=c();years=c();type=c();ranks=c();sortedsizes=c();sortednsizes=c()
for(year in wyears){
load(paste0('probas/processed_counts_',(year-windowSize+1),"-",year,'.RData'));show(year)
technoprobas=currentprobas$technoprobas;semprobas=currentprobas$semprobas;rm(currentprobas);gc()
techsizes=colSums(technoprobas);semsizes=colSums(semprobas)
sizes=append(sizes,techsizes);nsizes=append(nsizes,techsizes/nrow(technoprobas));years=append(years,rep(year,length(techsizes)));type=append(type,rep("techno",length(techsizes)));
ranks=append(ranks,1:length(techsizes));sortedsizes=append(sortedsizes,sort(techsizes,decreasing = TRUE))
sizes=append(sizes,semsizes);nsizes=append(nsizes,semsizes/nrow(semprobas));years=append(years,rep(year,length(semsizes)));type=append(type,rep("semantic",length(semsizes)))
ranks=append(ranks,1:length(semsizes));sortedsizes=append(sortedsizes,sort(semsizes,decreasing = TRUE))
}
df=data.frame(size=sizes,nsize=nsizes,sortedsize=sortedsizes,sortednsize=sortednsizes,years=as.character(years),type=type)
sortedsizes
sortednsizes
sizes=c();nsizes=c();years=c();type=c();ranks=c();sortedsizes=c();sortednsizes=c()
for(year in wyears){
load(paste0('probas/processed_counts_',(year-windowSize+1),"-",year,'.RData'));show(year)
technoprobas=currentprobas$technoprobas;semprobas=currentprobas$semprobas;rm(currentprobas);gc()
techsizes=colSums(technoprobas);semsizes=colSums(semprobas)
sizes=append(sizes,techsizes);nsizes=append(nsizes,techsizes/nrow(technoprobas));years=append(years,rep(year,length(techsizes)));type=append(type,rep("techno",length(techsizes)));
ranks=append(ranks,1:length(techsizes));sortedsizes=append(sortedsizes,sort(techsizes,decreasing = TRUE));sortednsizes=append(sortednsizes,sort(techsizes/nrow(technoprobas),decreasing = TRUE))
sizes=append(sizes,semsizes);nsizes=append(nsizes,semsizes/nrow(semprobas));years=append(years,rep(year,length(semsizes)));type=append(type,rep("semantic",length(semsizes)))
ranks=append(ranks,1:length(semsizes));sortedsizes=append(sortedsizes,sort(semsizes,decreasing = TRUE));sortednsizes=append(sortednsizes,sort(semsizes/nrow(semprobas),decreasing = TRUE))
}
df=data.frame(size=sizes,nsize=nsizes,sortedsize=sortedsizes,sortednsize=sortednsizes,years=as.character(years),type=type)
g=ggplot(df,aes(x=ranks,y=sortedsizes,colour=year,group=year))
g+geom_point()+scale_x_log10()+scale_y_log10()+facet_wrap(~type)
g=ggplot(df,aes(x=ranks,y=sortedsizes,colour=years,group=years))
g+geom_point()+scale_x_log10()+scale_y_log10()+facet_wrap(~type)
g+geom_line()+scale_x_log10()+scale_y_log10()+facet_wrap(~type)
g=ggplot(df,aes(x=ranks,y=sortedsizes,colour=years,group=years))
g+geom_point()+scale_x_log10()+scale_y_log10()+facet_wrap(~type)
df[df$years=="2012"&df$type=="techno",]
length(sizes)
techsizes
sizes=c();nsizes=c();years=c();type=c();ranks=c();sortedsizes=c();sortednsizes=c()
for(year in wyears){
load(paste0('probas/processed_counts_',(year-windowSize+1),"-",year,'.RData'));show(year)
technoprobas=currentprobas$technoprobas;semprobas=currentprobas$semprobas;rm(currentprobas);gc()
techsizes=colSums(technoprobas);semsizes=colSums(semprobas)
sizes=append(sizes,techsizes);years=append(years,rep(year,length(techsizes)))
#nsizes=append(nsizes,techsizes/nrow(technoprobas));;type=append(type,rep("techno",length(techsizes)));
#ranks=append(ranks,1:length(techsizes));sortedsizes=append(sortedsizes,sort(techsizes,decreasing = TRUE));sortednsizes=append(sortednsizes,sort(techsizes/nrow(technoprobas),decreasing = TRUE))
#sizes=append(sizes,semsizes);nsizes=append(nsizes,semsizes/nrow(semprobas));years=append(years,rep(year,length(semsizes)));type=append(type,rep("semantic",length(semsizes)))
#ranks=append(ranks,1:length(semsizes));sortedsizes=append(sortedsizes,sort(semsizes,decreasing = TRUE));sortednsizes=append(sortednsizes,sort(semsizes/nrow(semprobas),decreasing = TRUE))
}
sizes=c();nsizes=c();years=c();type=c();ranks=c();sortedsizes=c();sortednsizes=c()
for(year in wyears){
load(paste0('probas/processed_counts_',(year-windowSize+1),"-",year,'.RData'));show(year)
technoprobas=currentprobas$technoprobas;semprobas=currentprobas$semprobas;rm(currentprobas);gc()
techsizes=colSums(technoprobas);semsizes=colSums(semprobas)
sizes=append(sizes,sort(techsizes,decreasing=TRUE));years=append(years,rep(year,length(techsizes)));ranks=append(ranks,1:length(techsizes))
#nsizes=append(nsizes,techsizes/nrow(technoprobas));;type=append(type,rep("techno",length(techsizes)));
#ranks=append(ranks,1:length(techsizes));sortedsizes=append(sortedsizes,sort(techsizes,decreasing = TRUE));sortednsizes=append(sortednsizes,sort(techsizes/nrow(technoprobas),decreasing = TRUE))
#sizes=append(sizes,semsizes);nsizes=append(nsizes,semsizes/nrow(semprobas));years=append(years,rep(year,length(semsizes)));type=append(type,rep("semantic",length(semsizes)))
#ranks=append(ranks,1:length(semsizes));sortedsizes=append(sortedsizes,sort(semsizes,decreasing = TRUE));sortednsizes=append(sortednsizes,sort(semsizes/nrow(semprobas),decreasing = TRUE))
}
g=ggplot(data.frame(size=sizes,year=as.character(years)))
g+geom_point(aes(x=rank,y=size,colour=year))+scale_x_log10()+scale_y_log10()
g=ggplot(data.frame(size=sizes,year=as.character(years),rank=ranks))
g+geom_point(aes(x=rank,y=size,colour=year))+scale_x_log10()+scale_y_log10()
g=ggplot(data.frame(size=sizes,year=as.character(years),rank=ranks))
g+geom_line(aes(x=rank,y=size,colour=year,group=year))+scale_x_log10()+scale_y_log10()
sizes=c();nsizes=c();years=c();type=c();ranks=c();sortedsizes=c();sortednsizes=c()
for(year in wyears){
load(paste0('probas/processed_counts_',(year-windowSize+1),"-",year,'.RData'));show(year)
technoprobas=currentprobas$technoprobas;semprobas=currentprobas$semprobas;rm(currentprobas);gc()
techsizes=colSums(technoprobas);semsizes=colSums(semprobas)
sizes=append(sizes,sort(semsizes,decreasing=TRUE));years=append(years,rep(year,length(techsizes)));ranks=append(ranks,1:length(techsizes))
#nsizes=append(nsizes,techsizes/nrow(technoprobas));;type=append(type,rep("techno",length(techsizes)));
#ranks=append(ranks,1:length(techsizes));sortedsizes=append(sortedsizes,sort(techsizes,decreasing = TRUE));sortednsizes=append(sortednsizes,sort(techsizes/nrow(technoprobas),decreasing = TRUE))
#sizes=append(sizes,semsizes);nsizes=append(nsizes,semsizes/nrow(semprobas));years=append(years,rep(year,length(semsizes)));type=append(type,rep("semantic",length(semsizes)))
#ranks=append(ranks,1:length(semsizes));sortedsizes=append(sortedsizes,sort(semsizes,decreasing = TRUE));sortednsizes=append(sortednsizes,sort(semsizes/nrow(semprobas),decreasing = TRUE))
}
g=ggplot(data.frame(size=sizes,year=as.character(years),rank=ranks))
g+geom_line(aes(x=rank,y=size,colour=year,group=year))+scale_x_log10()+scale_y_log10()
sizes=c();nsizes=c();years=c();type=c();ranks=c();sortedsizes=c();sortednsizes=c()
for(year in wyears){
load(paste0('probas/processed_counts_',(year-windowSize+1),"-",year,'.RData'));show(year)
technoprobas=currentprobas$technoprobas;semprobas=currentprobas$semprobas;rm(currentprobas);gc()
techsizes=colSums(technoprobas);semsizes=colSums(semprobas)
sizes=append(sizes,sort(semsizes,decreasing=TRUE));years=append(years,rep(year,length(semsizes)));ranks=append(ranks,1:length(semsizes))
#nsizes=append(nsizes,techsizes/nrow(technoprobas));;type=append(type,rep("techno",length(techsizes)));
#ranks=append(ranks,1:length(techsizes));sortedsizes=append(sortedsizes,sort(techsizes,decreasing = TRUE));sortednsizes=append(sortednsizes,sort(techsizes/nrow(technoprobas),decreasing = TRUE))
#sizes=append(sizes,semsizes);nsizes=append(nsizes,semsizes/nrow(semprobas));years=append(years,rep(year,length(semsizes)));type=append(type,rep("semantic",length(semsizes)))
#ranks=append(ranks,1:length(semsizes));sortedsizes=append(sortedsizes,sort(semsizes,decreasing = TRUE));sortednsizes=append(sortednsizes,sort(semsizes/nrow(semprobas),decreasing = TRUE))
}
g=ggplot(data.frame(size=sizes,year=as.character(years),rank=ranks))
g+geom_line(aes(x=rank,y=size,colour=year,group=year))+scale_x_log10()+scale_y_log10()
